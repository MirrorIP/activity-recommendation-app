package de.imc.mirror.arapp.client;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Benefit {
	
	private static final Benefit TIMESAVEDMIN = new Benefit("timeSavedMin", "Time Saved (min.)", "The minutes you saved by applying the recommended solution (per application).");
	private static final Benefit TIMESAVEDHRS = new Benefit("timeSavedHrs", "Time Saved (hrs.)", "The hours you saved by applying the recommended solution (per application).");
	private static final Benefit COSTSSAVED = new Benefit("costsSaved", "Costs Saved (EUR)", "The money saved by applying the recommended solution.");
	private static final Benefit TURNOVER = new Benefit("turnover", "Turnover (EUR)", "The turnover generated by applying the recommended solution.");
	private static final Benefit NUMISSUESSOLVED = new Benefit("numIssuesSolved", "Number of Issues Solved", "Customer issues solved while applying the recommended solution.");
	private static final Benefit NUMUNITSPRODUCED = new Benefit("numUnitsProduced", "Number of Units Produced", "Number of units produced while applying the recommended solution.");
	private static final Benefit NUMWORDS = new Benefit("numWords", "Number of Words Written", "The number of words written while applying the recommended solution.");
	private static final Benefit CUSTOM = new Benefit("custom", "Custom", "");
	
	
	private static final Benefit[] benefits = {TIMESAVEDMIN, TIMESAVEDHRS, COSTSSAVED, TURNOVER, NUMISSUESSOLVED, NUMUNITSPRODUCED, NUMWORDS, CUSTOM};
	
	private String id;
	private String display;
	private String description;
	private int value;
	
	private Benefit(String id, String display, String description) {
		this.id = id;
		this.display = display;
		this.description = description;
		this.value = -1;
	}
	
	/**
	 * Gets the id of the benefit.
	 * @return the id of the benefit.
	 */
	public String getId() {
		return id;
	}
	
	/**
	 * Gets the String to display, e.g. the unit.
	 * @return the string to display.
	 */
	public String getDisplay() {
		return display;
	}
	
	/**
	 * Sets the string to display. E.g. the unit.
	 * @param display the string to display.
	 */
	public void setDisplay(String display) {
		this.display = display;
	}
	
	/**
	 * Gets the description for the Benefit.
	 * @return the set description for the benefit. 
	 */
	public String getDescription() {
		return description;		
	}
	
	/**
	 * Sets the description for the Benefit.
	 * @param description the description to set.
	 */
	public void setDescription(String description) {
		this.description = description;
	}
	
	/**
	 * Sets the value for this benefit.
	 * @param value the value to set.
	 */
	public void setValue(int value) {
		this.value = value;
	}
	
	/**
	 * Gets the set value.
	 * @return the set value.
	 */
	public int getValue() {
		return value;
	}
	
	/**
	 * @return a list of all available Benefits.
	 */
	public static List<Benefit> values() {
		List<Benefit> benefitList = new ArrayList<Benefit>();
		for (Benefit benefit: benefits) {
			benefitList.add(benefit);
		}
		return Collections.unmodifiableList(benefitList);
	}
	
	/**
	 * Method to get the benefit with the id matching the given one.
	 * @param id the id of the benefit to get
	 * @return the benefit with the correct id. <code>null</code> if no benefit was found.
	 */
	public static Benefit getBenefit(String id) {
		for (Benefit benefit: benefits) {
			if (benefit.getId().equalsIgnoreCase(id)) {
				return new Benefit(benefit.getId(), benefit.getDisplay(), benefit.getDescription());
			}
		}
		return null;
	}
}
